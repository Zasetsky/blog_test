services:
  db:
    image: mysql:8.0
    container_name: blog_db
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u${MYSQL_USER:-${DB_USERNAME}} -p${MYSQL_PASSWORD:-${DB_PASSWORD}} --silent || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks: [app]

  php:
    build:
      context: ./blog_server
      dockerfile: Dockerfile
    container_name: blog_php
    depends_on:
      db:
        condition: service_healthy
    env_file: [.env]
    volumes:
      - ./blog_server:/var/www/html
    entrypoint: ["/usr/local/bin/entrypoint.sh"]
    networks: [app]

  api:
    image: nginx:alpine
    container_name: blog_api
    depends_on: [php]
    volumes:
      - ./blog_server:/var/www/html:ro
      - ./blog_server/docker/nginx/api.nginx.conf:/etc/nginx/conf.d/default.conf:ro
    expose: ["80"]
    networks: [app]

  frontend:
    build:
      context: ./blog_client
      dockerfile: Dockerfile
    expose: ["3000"]
    depends_on: [api]
    networks: [app]

  web:
    image: nginx:alpine
    depends_on: [frontend, api]
    volumes:
      - ./blog_client/front.nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"
    networks: [app]

volumes:
  db_data:

networks:
  app:
